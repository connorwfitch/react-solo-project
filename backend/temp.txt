--------------------------------------------------------------------------------
Dependencies

npm init -y

  bcryptjs - password hashing
  cookie-parser - parsing cookies from requests
  cors - CORS
  csurf - CSRF protection
  dotenv - load environment variables into Node.js from a .env file
  express - Express
  express-async-handler - handling async route handlers
  express-validator - validation of request bodies
  helmet - security middleware
  jsonwebtoken - JWT
  morgan - logging information about server requests/responses
  per-env - use environment variables for starting app differently
  pg@">=8.4.1" - PostgresQL greater or equal to version 8.4.1
  sequelize@5 - Sequelize
  sequelize-cli@5 - use sequelize in the command line

npm install bcryptjs cookie-parser cors csurf dotenv express express-async-handler express-validator helmet jsonwebtoken morgan per-env pg@">=8.4.1" sequelize@5 sequelize-cli@5

  dotenv-cli - use dotenv in the command line
  nodemon - hot reload server backend files

npm install -D dotenv-cli nodemon


--------------------------------------------------------------------------------
JS Configuration

Generate a strong secret:
openssl rand -base64 10

Create a js config folder and export each environment variable


--------------------------------------------------------------------------------
Sequelize Configuration

Create .sequelizerc file with relevant exports

Initialize sequelize to the db folder
npx sequelize init

Refactor backend/config/database.js to allow loading the database configuration environment variables from the .env file into config/index.js

Create db user with same credentials as in .env
psql -c "CREATE USER <username> PASSWORD '<password>' CREATEDB"

Create the database using sequelize-cli
npx dotenv sequelize db:create


--------------------------------------------------------------------------------
Express Setup